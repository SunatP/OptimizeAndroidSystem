#!/system/bin/sh

export PATH=/system/etc/CrossBreeder:$PATH:/sbin:/vendor/bin:/system/sbin:/system/bin:/system/xbin:

set +e

CB_RunHaveged

if [ "$(getprop persist.crossbreeder.ui)" = "1" ]; then

busybox echo "Setting Liquid Smooth UI.." >> /cache/crossbreeder.log

setprop touch.pressure.scale 0.001
setprop persist.sys.scrollingcache 3
setprop ro.max.fling_velocity 12000
setprop ro.min.fling_velocity 8000

fi

if [ "$(getprop persist.crossbreeder.cfs)" = "1" ]; then

busybox echo "Tuning Cgroup File System ..." >> /cache/crossbreeder.log

for pid in `busybox ps | busybox awk '{ if ($2 ~ /^root$|^system$|^radio$|^wifi$|^blueto|^media$/) print $1 }'`; do
  echo -17 > /proc/$pid/oom_adj 2>/dev/null
done

for pid in `busybox ps -o pid,user,nice,args | busybox awk '{ if ( $2 ~ /^root$/ && $3 == "0" && $4 !~ /netd$|rild$|zygote$|kswapd|vold|loop/ ) print $1 }'`; do
  busybox renice 3 $pid 2>/dev/null
  busybox ionice -c 2 -n 3 -p $pid 2>/dev/null
done

for pid in `busybox ps | busybox awk '{ if ( $2 ~ /^root$/ && $4 !~ /netd$|rild$|zygote$|kswapd|vold|loop/ ) print $1 }'`; do
  busybox ionice -c 2 -n 3 -p $pid 2>/dev/null
done

for pid in $(busybox pgrep pdflush 2>/dev/null); do
  busybox renice 7 $pid 2>/dev/null
  busybox ionice -c 3 -n 7 -p $pid 2>/dev/null
done

for pid in $(busybox pgrep flush- 2>/dev/null); do
  busybox renice 7 $pid 2>/dev/null
  busybox ionice -c 3 -n 7 -p $pid 2>/dev/null
done

for pid in `busybox ps | busybox awk '{ if ( $2 ~ /^app_|^u0_/) print $1 }'`; do
  BUSYBOX renice -1 $pid 2>/dev/null
  BUSYBOX ionice -c 1 -n 0 -p $pid 2>/dev/null
done

if [ ! -d /dev/cpuctl ]; then
  busybox mkdir -p /dev/cpuctl 2>/dev/null
  busybox chown 1000.1000 /dev/cpuctl 2>/dev/null
  busybox chmod 660 /dev/cpuctl 2>/dev/null
fi

busybox mount -t cgroup -o cpu none /dev/cpuctl 2>/dev/null

if [ ! -d /dev/cpuctl/fg_boost ]; then
  busybox mkdir -p /dev/cpuctl/fg_boost 2>/dev/null
  busybox chown 1000.1000 /dev/cpuctl/fg_boost 2>/dev/null
  busybox chmod 775 /dev/cpuctl/fg_boost 2>/dev/null
fi

if [ ! -d /dev/cpuctl/bg_non_interactive ]; then
  busybox mkdir -p /dev/cpuctl/bg_non_interactive 2>/dev/null
  busybox chown 1000.1000 /dev/cpuctl/bg_non_interactive 2>/dev/null
  busybox chmod 775 /dev/cpuctl/bg_non_interactive 2>/dev/null
fi

if [ ! -d /dev/cpuctl/user ]; then
  busybox mkdir -p /dev/cpuctl/user 2>/dev/null
  busybox chown 1000.1000 /dev/cpuctl/user 2>/dev/null
  busybox chmod 775 /dev/cpuctl/user 2>/dev/null
fi

busybox cp /dev/null /dev/cpuctl/tasks 2>/dev/null
busybox cp /dev/null /dev/cpuctl/user/cgroup.procs 2>/dev/null
busybox cp /dev/null /dev/cpuctl/fg_boost/tasks 2>/dev/null
busybox cp /dev/null /dev/cpuctl/fg_boost/cgroup.procs 2>/dev/null
busybox cp /dev/null /dev/cpuctl/bg_non_interactive/tasks 2>/dev/null
busybox cp /dev/null /dev/cpuctl/bg_non_interactive/cgroup.procs 2>/dev/null


for pid in `busybox ps | busybox awk '{ print $1 }'`; do
  busybox echo $pid >> /dev/cpuctl/user/cgroup.procs 2>/dev/null
  for i in `ls /proc/$pid/task 2>/dev/null`; do
    busybox echo $pid >> /dev/cpuctl/user/tasks 2>/dev/null
  done
done

pid=$(busybox pgrep zygote 2>/dev/null)
busybox renice -1 $pid 2>/dev/null
busybox ionice -c 1 -n 0 -p $pid 2>/dev/null
busybox echo $pid >> /dev/cpuctl/user/cgroup.procs 2>/dev/null

for i in `ls /proc/$pid/task 2>/dev/null`; do
  busybox echo $i >> /dev/cpuctl/user/tasks 2>/dev/null
done

busybox echo 1 > /dev/cpuctl/user/cgroup.clone_children 2>/dev/null

for pid in `dumpsys activity services | busybox awk '{ print $2 }' | busybox grep -v '/100[0-9]}' | busybox cut -d: -f1`; do
  busybox renice 7 $pid 2>/dev/null
  busybox ionice -c 2 -n 7 -p $pid 2>/dev/null
done

for pid in `dumpsys activity services | busybox awk '{ print $2 }' | busybox cut -d: -f1`; do
  busybox echo $pid >> /dev/cpuctl/bg_non_interactive/cgroup.procs 2>/dev/null
  for i in `ls /proc/$pid/task 2>/dev/null`; do
    busybox echo $i >> /dev/cpuctl/bg_non_interactive/tasks 2>/dev/null
  done
done

pid=$(busybox pgrep kswapd0 2>/dev/null)
busybox renice 0 $pid 2>/dev/null
busybox ionice -c 2 -n 0 -p $pid 2>/dev/null

for pid in `busybox pgrep loop 2>/dev/null`; do
  busybox renice 0 $pid 2>/dev/null
  busybox ionice -c 2 -n 0 -p $pid 2>/dev/null
done

busybox echo 96 > /dev/cpuctl/bg_non_interactive/cpu.shares 2>/dev/null

pid=$(busybox pgrep surfaceflinger 2>/dev/null)
busybox echo $pid > /dev/cpuctl/fg_boost/cgroup.procs 2>/dev/null
for i in `ls /proc/$pid/task 2>/dev/null`; do
  busybox echo $i >> /dev/cpuctl/fg_boost/tasks 2>/dev/null
done

pid=$(busybox pgrep binder 2>/dev/null)
busybox echo $pid >> /dev/cpuctl/fg_boost/cgroup.procs 2>/dev/null
for i in `ls /proc/$pid/task 2>/dev/null`; do
  busybox echo $i >> /dev/cpuctl/fg_boost/tasks 2>/dev/null
done

busybox echo 1536 > /dev/cpuctl/fg_boost/cpu.shares 2>/dev/null
busybox echo 1024 > /dev/cpuctl/cpu.shares 2>/dev/null
busybox echo 1152 > /dev/cpuctl/user/cpu.shares 2>/dev/null

fi
